local fps = require("main.debug.fps")

function init(self)
	msg.post(".", "acquire_input_focus")

	self.fps_node = gui.get_node("fps")
	self.dt_node = gui.get_node("dt")
	self.viewsize_node = gui.get_node("viewsize")

	fps.init_graph(self)

	self.renderer_node = gui.get_node("renderer")
	local version = helper.get_version_info()
	if string.find(string.sub(version, 1, 1), "%d") then
		version = "OpenGL " .. version
	end
	gui.set_text(self.renderer_node, helper.get_vendor_info() .. "\n" .. helper.get_renderer_info() .. "\n" .. version)
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	fps.update(dt)
	fps.update_graph(self)

	gui.set_text(self.fps_node, "FPS " .. fps.fps)

	gui.set_text(self.dt_node, "sys dt "
	.. math.floor(fps.sys_dt * 1000) .. " ms"
	.. " / m-d " .. math.floor(fps.dt * 1000) .. " ms")

	local vsync = "frame cap " .. sys.get_config("display.update_frequency")
	if tonumber(sys.get_config("display.vsync")) == 1 then
		vsync = vsync .. ", vsync on"
	else
		vsync = vsync .. ", vsync off"
	end

	gui.set_text(self.viewsize_node, vsync)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("init_input") then
		process_input(self, nil, { x = -99999, y = -99999 }) -- to force update of button images
	end
end

function on_input(self, action_id, action)
end

function on_reload(self)
end
